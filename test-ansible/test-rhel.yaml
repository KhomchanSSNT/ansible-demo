---
- name: Check and update selected packages from user input
  hosts: all
  become: true
  vars:
    package_input: ""   # This is passed via AWX survey (free text)

  tasks:
    - name: Convert package_input (string) to list
      ansible.builtin.set_fact:
        target_packages: "{{ package_input.split() }}"

    - name: Clean yum metadata cache
      ansible.builtin.command: yum clean metadata
      changed_when: false

    - name: Run yum check-update
      ansible.builtin.command: yum check-update
      register: yum_updates
      changed_when: false
      failed_when: false

    - name: Extract available update package names
      ansible.builtin.set_fact:
        available_updates: >-
          {{ yum_updates.stdout_lines
             | select('match', '^[a-zA-Z0-9_.+-]+\\s+\\S+') 
             | map('split') 
             | map('first') 
             | list }}

    - name: Print available updates
      ansible.builtin.debug:
        msg: >-
          ===== Available Updates =====
          {{ '\n'.join(available_updates) if available_updates else 'No updates available.' }}

    - name: Filter user input against available updates
      ansible.builtin.set_fact:
        valid_updates: "{{ target_packages | select('in', available_updates) | list }}"

    - name: Print valid packages to be updated
      ansible.builtin.debug:
        msg: >-
          ===== Valid Packages to Update =====
          {{ ', '.join(valid_updates) if valid_updates else 'None of the specified packages are updatable.' }}

    - name: Update selected valid packages
      ansible.builtin.yum:
        name: "{{ item }}"
        state: latest
      loop: "{{ valid_updates }}"
      when: valid_updates | length > 0
